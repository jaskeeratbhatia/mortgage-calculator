{"version":3,"sources":["components/Header.js","utilities/validate.js","constants.js","components/Form.js","utilities/calculations.js","globals/theme.js","components/PaymentCharts.js","components/SummaryTable.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","validateMortgage","value","parseInt","validateRate","parseFloat","validateAmortizationPeriod","validateTerm","amortizationPeriod","hasErrors","formErrors","hasError","Object","entries","tooltipText","paymentFrequencyOptions","key","label","getTermOptions","termOptionsArray","i","push","summaryCategories","Form","mortgageAmt","rate","paymentFrequency","term","handleInputChange","handleSubmit","errors","id","htmlFor","href","type","name","placeholder","onChange","max","min","map","option","index","onClick","convertToFloat","x","Number","toFixed","getMonthlyRate","effectiveAnnualRateFloat","Math","pow","colors","PaymentCharts","props","AreaChart","width","height","data","graphData","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","tick","stroke","YAxis","CartesianGrid","strokeDasharray","Tooltip","Area","fillOpacity","fill","BarChart","barData","Legend","Bar","SummaryTable","summaryTableData","payment","filter","item","category","scope","amortization","Dashboard","useState","setMortgageAmt","setRate","setAmortizationPeriod","setPaymentFrequency","setTerm","setSummaryTableData","setGraphData","setBarData","setErrors","calculate","numberOfTermPayments","numberOfTotalPayments","principal","frequencyfactoredRateFloat","interestPayment","firstPrincipalPayment","numberOfTermPaymentsLeft","termPrincipalPaymentSum","termInterestPaymentSum","endingBalance","nextInterestPayment","nextPrincipalPayment","toString","j","totalCost","interest","calculateMortage","e","target","validateInputs","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f697725.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => (\n  <div className=\"container-fluid header\">\n    <div className=\"row no-gutters\">Mortgage Calculator</div>\n  </div>\n);\n","export const validateInputs = (\n  mortgageAmt,\n  rate,\n  amortizationPeriod,\n  term\n) => ({\n  mortgageAmt: validateMortgage(mortgageAmt),\n  rate: validateRate(rate),\n  amortizationPeriod: validateAmortizationPeriod(amortizationPeriod),\n  term: validateTerm(amortizationPeriod, term),\n});\n\nexport const validateMortgage = (value) => {\n  if (parseInt(value) < 1000 || parseInt(value) > 10000000) {\n    return \"Amount should be greater than 999 and less than 9,999,999\";\n  } else {\n    return \"\";\n  }\n};\n\nexport const validateRate = (value) => {\n  if (parseFloat(value) > 0 && parseFloat(value) < 100) return \"\";\n  return \"Interest rate should be greater than 0 and less than 100\";\n};\n\nexport const validateAmortizationPeriod = (value) => {\n  if (parseInt(value) > 0 && parseInt(value) <= 30) return \"\";\n  return \"Period should be miminum 1 year and maximum 30 years\";\n};\n\nexport const validateTerm = (amortizationPeriod, value) => {\n  if (parseInt(value) > parseInt(amortizationPeriod)) {\n    return \"Term shoud be less than Amortization Period\";\n  } else {\n    return \"\";\n  }\n};\n\nexport const hasErrors = (formErrors) => {\n  let hasError = false\n  for (const [key, value] of Object.entries(formErrors)) {\n    if (value !== '') {\n      hasError = true;\n      break;\n    }\n  }\n  return hasError\n}","export const tooltipText = {\n  TERM: \"The number of term years.\",\n  PAYMENT_FREQUENCY:\n    \"By choosing an accelerated payment frequency, you can reduce your amortization period and save thousands of dollars in interest in the long run.\",\n  RATE: \"Annual interest rate for this mortgage.\",\n  AMORTIZATION:\n    \"The number of years and months over which you will repay this loan. The most common amortization period is 25 years.\",\n  MORTGAGE: \"The amount you expect to borrow from your financial institution.\",\n};\n\nexport const paymentFrequencyOptions = [\n  {\n    key: \"weekly\",\n    label: \"Weekly\",\n    value: 52,\n  },\n  {\n    key: \"biweekly\",\n    label: \"Bi-Weekly (every 2 weeks)\",\n    value: 26,\n  },\n  {\n    key: \"monthly\",\n    label: \"Monthly (12x per year)\",\n    value: 12,\n  },\n  {\n    key: \"semimonthly\",\n    label: \"Semi-monthly (24x per year)\",\n    value: 24,\n  },\n];\n\nexport const getTermOptions = () => {\n  let termOptionsArray = [];\n  for (let i = 1; i <= 30; i++) {\n    termOptionsArray.push({\n      label: `${i}`,\n      value: i,\n    });\n  }\n  return termOptionsArray;\n};\n\nexport const summaryCategories = {\n  NUMBER_OF_PAYMENTS: \"Number of Payments\",\n  MORTGAGE_PAYMENT: \"Mortgage Payment\",\n  PRINCIPAL_PAYMENTS: \"Principal Payments\",\n  INTEREST_PAYMENTS: \"Interest Payments\",\n  TOTAL_COST: \"Total Cost\",\n};\n","import React from \"react\";\nimport {\n  tooltipText,\n  getTermOptions,\n  paymentFrequencyOptions,\n} from \"../constants\";\nimport ReactTooltip from 'react-tooltip'\nexport const Form = ({\n  mortgageAmt,\n  rate,\n  amortizationPeriod,\n  paymentFrequency,\n  term,\n  handleInputChange,\n  handleSubmit,\n  errors,\n}) => {\n  return (\n    <div\n      id=\"mortgage-form-container\"\n      data-testid=\"mortgage-form-container\"\n      className=\"jumbotron no-gutters col-12 col-sm-6 mt-3 py-5\"\n    >\n      <div className=\"row align-items-center mb-3\">\n        <div className=\"col-12 col-sm-6\">\n          <label htmlFor=\"basic-url\">Mortgage Amount</label>\n          <a href=\"/#\" data-tip={tooltipText.MORTGAGE} className=\"tooltip-help\">\n            ?\n          </a>\n          <ReactTooltip/>\n        </div>\n        <div className=\"col-12 col-sm-6\">\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">$</span>\n            </div>\n            <input\n              id=\"mortgageAmt\"\n              data-testid=\"mortgageAmt\"\n              type=\"number\"\n              className=\"form-control\"\n              name=\"mortgageAmt\"\n              aria-label=\"Amount (to the nearest dollar)\"\n              placeholder=\"Value nearest to dollar amount\"\n              value={mortgageAmt}\n              onChange={handleInputChange}\n            />\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text\">.00</span>\n            </div>\n          </div>\n          {errors?.mortgageAmt && (\n            <div className=\"error\">{errors?.mortgageAmt}</div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"row align-items-center mb-3 align-items-center mb-3\">\n        <div className=\"col-12 col-sm-6\">\n          <label htmlFor=\"interestRate\">Interest Rate</label>\n          <a href=\"/#\" data-tip={tooltipText.RATE} className=\"tooltip-help\">\n            ?\n          </a>\n        </div>\n        <div className=\"col-12 col-sm-6\">\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">%</span>\n            </div>\n            <input\n              id=\"rate\"\n              data-testid=\"rate\"\n              type=\"number\"\n              className=\"form-control\"\n              name=\"rate\"\n              aria-label=\"Interest Rate\"\n              placeholder=\"Annual Interest Rate\"\n              value={rate}\n              max={100}\n              min={0}\n              onChange={handleInputChange}\n            />\n          </div>\n          {errors?.rate && <div className=\"error\">{errors?.rate}</div>}\n        </div>\n      </div>\n\n      <div className=\"row align-items-center mb-3\">\n        <div className=\"col-12 col-sm-6\">\n          <label htmlFor=\"amortizationPeriod\">Amortization Period</label>\n          <a\n            href=\"/#\"\n            data-tip={tooltipText.AMORTIZATION}\n            className=\"tooltip-help\"\n          >\n            ?\n          </a>\n        </div>\n        <div className=\"col-12 col-sm-6\">\n          <input\n            id=\"amortizationPeriod\"\n            data-testid=\"amortizationPeriod\"\n            type=\"number\"\n            className=\"form-control\"\n            name=\"amortizationPeriod\"\n            aria-label=\"Amortization Period\"\n            placeholder=\"Years\"\n            value={amortizationPeriod}\n            onChange={handleInputChange}\n            max={30}\n            min={1}\n          />\n          {errors?.amortizationPeriod && (\n            <div className=\"error\">{errors?.amortizationPeriod}</div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"row align-items-center mb-3\">\n        <div className=\"col-12 col-sm-6\">\n          <label htmlFor=\"paymentFrequency\">Payment Frequency</label>\n          <a\n            href=\"/#\"\n            data-tip={tooltipText.PAYMENT_FREQUENCY}\n            className=\"tooltip-help\"\n          >\n            ?\n          </a>\n        </div>\n        <div className=\"col-12 col-sm-6\">\n          <select\n            name=\"paymentFrequency\"\n            id=\"paymentFrequency\"\n            data-testid=\"paymentFrequency\"\n            value={paymentFrequency}\n            onChange={handleInputChange}\n          >\n            {paymentFrequencyOptions.map((option, index) => (\n              <option id={index} value={option.value} key={index}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row align-items-center mb-3\">\n        <div className=\"col-12 col-sm-6\">\n          <label htmlFor=\"term\">Term</label>\n          <a href=\"/#\" data-tip={tooltipText.TERM} className=\"tooltip-help\">\n            ?\n          </a>\n        </div>\n        <div className=\"col-12 col-sm-6\">\n          <select\n            id=\"term\"\n            data-testid=\"term\"\n            name=\"term\"\n            value={term}\n            onChange={handleInputChange}\n          >\n            {getTermOptions().map((option, index) => (\n              <option id={index} value={option.value} key={index}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n          {errors?.term && <div className=\"error\">{errors?.term}</div>}\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <button type=\"button\" className=\"btn btn-dark calculate-btn\" onClick={handleSubmit}>\n          Calculate\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { summaryCategories } from \"../constants\";\n\nconst convertToFloat = (x) => {\n  return Number.parseFloat(x).toFixed(2);\n};\n\nexport const calculateMortage = (\n  mortgageAmt,\n  rate,\n  amortizationPeriod,\n  paymentFrequency,\n  term\n) => {\n  const numberOfTermPayments = paymentFrequency * term;\n  const numberOfTotalPayments = paymentFrequency * amortizationPeriod;\n\n  // Arrays for holding summary data and graph data\n  const summaryTableData = [];\n  const graphData = [];\n\n  // Add initial values for summary table and graph\n  summaryTableData.push({\n    category: summaryCategories.NUMBER_OF_PAYMENTS,\n    term: numberOfTermPayments,\n    amortization: numberOfTotalPayments,\n  });\n\n  graphData.push({\n    name: \"0\",\n    principal: mortgageAmt,\n  });\n\n  // Follow this resource for mortgage calculation http://www.yorku.ca/amarshal/mortgage.htm\n\n  const monthlyRateFloat = getMonthlyRate(rate) / 100;\n  const frequencyfactoredRateFloat = monthlyRateFloat * (12 / paymentFrequency);\n  const interestPayment = mortgageAmt * frequencyfactoredRateFloat;\n  const payment =\n    interestPayment /\n    (1 - Math.pow(1 + frequencyfactoredRateFloat, -numberOfTotalPayments));\n\n  summaryTableData.push({\n    category: summaryCategories.MORTGAGE_PAYMENT,\n    term: convertToFloat(payment),\n    amortization: convertToFloat(payment),\n  });\n\n  const firstPrincipalPayment = payment - interestPayment;\n  const numberOfTermPaymentsLeft = numberOfTermPayments - 1;\n  let termPrincipalPaymentSum = firstPrincipalPayment;\n  let termInterestPaymentSum = interestPayment;\n  let endingBalance = mortgageAmt - firstPrincipalPayment;\n\n  for (let i = 1; i <= numberOfTermPaymentsLeft; i++) {\n    const nextInterestPayment = parseFloat(\n      convertToFloat(endingBalance * frequencyfactoredRateFloat)\n    );\n    const nextPrincipalPayment = parseFloat(\n      convertToFloat(payment - nextInterestPayment)\n    );\n    endingBalance =\n      parseFloat(endingBalance) -\n      parseFloat(payment) +\n      parseFloat(nextInterestPayment);\n    termInterestPaymentSum += nextInterestPayment;\n    termPrincipalPaymentSum += nextPrincipalPayment;\n\n    if (i % paymentFrequency === 0) {\n      graphData.push({\n        name: i.toString(),\n        principal: parseFloat(\n          (mortgageAmt - termPrincipalPaymentSum).toFixed(2)\n        ),\n      });\n    }\n  }\n\n  summaryTableData.push({\n    category: summaryCategories.PRINCIPAL_PAYMENTS,\n    term: convertToFloat(termPrincipalPaymentSum),\n    amortization: convertToFloat(mortgageAmt),\n  });\n\n  summaryTableData.push({\n    category: summaryCategories.INTEREST_PAYMENTS,\n    term: convertToFloat(termInterestPaymentSum),\n    amortization: convertToFloat(numberOfTotalPayments * payment - mortgageAmt),\n  });\n\n  summaryTableData.push({\n    category: summaryCategories.TOTAL_COST,\n    term: convertToFloat(numberOfTermPayments * payment),\n    amortization: convertToFloat(numberOfTotalPayments * payment),\n  });\n\n  for (let j = numberOfTermPayments; j <= numberOfTotalPayments; j++) {\n    const nextInterestPayment = parseFloat(\n      convertToFloat(endingBalance * frequencyfactoredRateFloat)\n    );\n    const nextPrincipalPayment = parseFloat(\n      convertToFloat(payment - nextInterestPayment)\n    );\n    endingBalance =\n      parseFloat(endingBalance) -\n      parseFloat(payment) +\n      parseFloat(nextInterestPayment);\n    termInterestPaymentSum += nextInterestPayment;\n    termPrincipalPaymentSum += nextPrincipalPayment;\n\n    if (j % paymentFrequency === 0) {\n      graphData.push({\n        name: j.toString(),\n        principal: parseFloat(\n          (mortgageAmt - termPrincipalPaymentSum).toFixed(2) > 0\n            ? (mortgageAmt - termPrincipalPaymentSum).toFixed(2)\n            : 0\n        ),\n      });\n    }\n  }\n\n  return {\n    summaryTableData,\n    graphData,\n    barData: [\n      {\n        totalCost: \"Total Mortgage Cost\",\n        interest: parseFloat(\n          (payment * numberOfTotalPayments - mortgageAmt).toFixed(2)\n        ),\n        principal: parseFloat(\n          typeof mortgageAmt === \"float\" ? mortgageAmt.toFixed(2) : mortgageAmt\n        ),\n      },\n    ],\n  };\n};\n\n// Canadian annual rate is compunded semi-annually\nexport const getMonthlyRate = (rate) => {\n  const effectiveAnnualRateFloat = Math.pow(1 + rate / 200, 2) - 1;\n  const rateMonthyFloat = Math.pow(1 + effectiveAnnualRateFloat, 1 / 12) - 1;\n  return rateMonthyFloat * 100;\n};\n","export const colors = {\n  RBC_WHITE: '#fdfdfd',\n  RBC_YELLOW: '#ffd200',\n  RBC_BLUE: '#005daa',\n}","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  BarChart,\n  Legend,\n} from \"recharts\";\nimport { colors } from \"../globals/theme\";\n\nexport const PaymentCharts = (props) => {\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <h2 className=\"diagram-heading\">Payment Diagrams</h2>\n        <div className=\"row justify-content-center justify-content-md-around mb-3 mt-3\">\n          <AreaChart\n            className='chart-container'\n            width={500}\n            height={250}\n            data={props.graphData}\n          >\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={colors.RBC_YELLOW} stopOpacity={1} />\n                <stop offset=\"95%\" stopColor={colors.RBC_YELLOW} stopOpacity={0.6} />\n              </linearGradient>\n            </defs>\n            <XAxis dataKey=\"name\" tick={{ stroke: colors.RBC_WHITE }} />\n            <YAxis tick={{ stroke: colors.RBC_WHITE }} />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip />\n            <Area\n              type=\"monotone\"\n              dataKey=\"principal\"\n              stroke={colors.RBC_YELLOW}\n              fillOpacity={1}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n\n          <BarChart\n            className='chart-container'\n            width={250}\n            height={250}\n            data={props.barData}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"totalCost\" tick={{ stroke: colors.RBC_WHITE }} />\n            <YAxis tick={{ stroke: colors.RBC_WHITE }} />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"principal\" fill={colors.RBC_YELLOW} />\n            <Bar dataKey=\"interest\" fill={colors.RBC_WHITE} />\n          </BarChart>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { summaryCategories } from \"../constants\";\n\nexport const SummaryTable = ({ summaryTableData }) => {\n  const payment = summaryTableData.filter((item) => item.category === summaryCategories.MORTGAGE_PAYMENT)[0]?.term;\n  return (\n    <div className=\"container-fluid\">\n      <h2 className=\"summary-heading\">Summary</h2>\n      <h3 className='summary-payment-amount'>Your Mortgage payment is just : <span>${payment}</span></h3>\n      <div className=\"row justify-content-center align-items-center mb-3 mt-3\">\n        <div className=\"col-12 col-sm-10\">\n          <table\n            id=\"summary-table\"\n            data-testid=\"summary-table\"\n            className=\"table table-striped\"\n          >\n            <thead className=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Term Figures</th>\n                <th scope=\"col\">Amortization Figures</th>\n              </tr>\n            </thead>\n            <tbody>\n              {summaryTableData.map((item, index) => (\n                <tr key={index}>\n                  <th scope=\"row\">{item.category}</th>\n                  <td id={`term-${index}`} data-testid={`term-${index}`}>\n                    {item.term}\n                  </td>\n                  <td\n                    id={`amortization-${index}`}\n                    data-testid={`amortization-${index}`}\n                  >\n                    {item.amortization}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","import React, { useState } from \"react\";\nimport { validateInputs, hasErrors } from \"../utilities/validate\";\nimport { Form } from \"./Form\";\nimport { calculateMortage } from \"../utilities/calculations\";\nimport { PaymentCharts } from \"./PaymentCharts\";\nimport { SummaryTable } from \"./SummaryTable\";\n\nexport const Dashboard = () => {\n  const [mortgageAmt, setMortgageAmt] = useState(50000);\n  const [rate, setRate] = useState(5);\n  const [amortizationPeriod, setAmortizationPeriod] = useState(25);\n  const [paymentFrequency, setPaymentFrequency] = useState(12);\n  const [term, setTerm] = useState(5);\n  const [summaryTableData, setSummaryTableData] = useState(5);\n  const [graphData, setGraphData] = useState(null);\n  const [barData, setBarData] = useState({});\n  const [errors, setErrors] = useState({\n    mortgageAmt: \"\",\n    rate: \"\",\n    amortizationPeriod: \"\",\n    paymentFrequency: \"\",\n    term: \"\",\n  });\n\n  const handleInputChange = (e) => {\n    setErrors({\n      ...errors,\n      [e.target.name]: \"\",\n    });\n    switch (e.target.name) {\n      case \"mortgageAmt\": {\n        setMortgageAmt(e.target.value);\n        break;\n      }\n      case \"rate\": {\n        setRate(e.target.value);\n        break;\n      }\n      case \"amortizationPeriod\": {\n        setAmortizationPeriod(e.target.value);\n        break;\n      }\n      case \"paymentFrequency\": {\n        setPaymentFrequency(e.target.value);\n        break;\n      }\n      case \"term\": {\n        setTerm(e.target.value);\n        break;\n      }\n      default:\n        return;\n    }\n  };\n\n  const calculate = () => {\n    const { summaryTableData, graphData, barData } = calculateMortage(\n      mortgageAmt,\n      rate,\n      amortizationPeriod,\n      paymentFrequency,\n      term\n    );\n    setSummaryTableData(summaryTableData);\n    setGraphData(graphData);\n    setBarData(barData);\n  };\n\n  const handleSubmit = () => {\n    const formErrors = validateInputs(\n      mortgageAmt,\n      rate,\n      amortizationPeriod,\n      term\n    );\n    if (hasErrors(formErrors)) {\n      setErrors({\n        ...errors,\n        ...formErrors,\n      });\n    } else {\n      calculate();\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <Form\n        mortgageAmt={mortgageAmt}\n        rate={rate}\n        amortizationPeriod={amortizationPeriod}\n        paymentFrequency={paymentFrequency}\n        term={term}\n        handleInputChange={handleInputChange}\n        handleSubmit={handleSubmit}\n        errors={errors}\n      />\n      {summaryTableData?.length > 0 && !hasErrors(errors) && (\n        <SummaryTable summaryTableData={summaryTableData} />\n      )}\n      {graphData?.length && !hasErrors(errors) && (\n        <PaymentCharts graphData={graphData} barData={barData} />\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport { Dashboard } from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}